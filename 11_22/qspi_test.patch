diff --git a/boards/1680_fpga/board_1680.c b/boards/1680_fpga/board_1680.c
index dc0903d..dbe2a14 100644
--- a/boards/1680_fpga/board_1680.c
+++ b/boards/1680_fpga/board_1680.c
@@ -6,7 +6,9 @@
 
 int get_bootmode(void)
 {
-	return readl(BOOT_MODE_REG_ADDR) & 0x7;
+	//return readl(BOOT_MODE_REG_ADDR) & 0x7;
+	//return NOR_BOOT;
+	return NAND_BOOT;
 }
 
 int get_secboot_flag(void)
diff --git a/boards/2280_ddr/board_2280.c b/boards/2280_ddr/board_2280.c
index f8f2cf7..89b80a3 100644
--- a/boards/2280_ddr/board_2280.c
+++ b/boards/2280_ddr/board_2280.c
@@ -6,7 +6,8 @@
 
 int get_bootmode(void)
 {
-	return NAND_BOOT;
+	//return NAND_BOOT;
+	return NOR_BOOT;
 }
 
 int get_secboot_flag(void)
diff --git a/main/main.c b/main/main.c
index 8779f14..ac00dac 100644
--- a/main/main.c
+++ b/main/main.c
@@ -24,6 +24,7 @@
 #include "clock.h"
 #include "imi_ipc.h"
 #include "imi_bm.h"
+#include "board.h"
 
 #define JTAG			0
 
@@ -35,6 +36,12 @@ extern void dcache_enable(void);
 #define      UART_TASK_STK_SIZE     1024
 TaskHandle_t UART_Handler;
 
+//qspi task parameter
+#define      QSPI_TASK_PRIO         1
+#define      QSPI_TASK_STK_SIZE     1024
+TaskHandle_t QSPI_Handler;
+
+
 void vApplicationStackOverflowHook( TaskHandle_t pxTask, char *pcTaskName )
 {
 	/* If configCHECK_FOR_STACK_OVERFLOW is set to either 1 or 2 then this
@@ -59,6 +66,27 @@ int *breakpoint2 = (int*)0x98000010;
 #if defined(CHIP_IMI_2280)
 extern void imi_task_init(void);
 #endif
+
+
+
+
+extern void nand_test(void);
+extern void nor_test(void);
+void xl_test( void *pvParameters )
+{
+	int bmode = get_bootmode();
+	imi_printf("\n\nhello shl ,bootmode = %d\n", bmode);
+
+	if (bmode == NAND_BOOT) {
+		nand_test();
+	} else {
+		nor_test();
+	}
+
+	while(1);
+}
+
+
 int main(int value,char *agrv[])
 {
 	icache_enable();
@@ -73,6 +101,8 @@ int main(int value,char *agrv[])
 	InitSysCtrl();
 	InitCalls();
 
+	xTaskCreate(xl_test, "xl_test", QSPI_TASK_STK_SIZE, NULL, QSPI_TASK_PRIO, &QSPI_Handler);
+
 	xTaskCreate(uart_task, "uart_task", UART_TASK_STK_SIZE, NULL, UART_TASK_PRIO, &UART_Handler);  //who send mesg must the last create
 
 #if defined(CHIP_IMI_2280)
@@ -85,3 +115,4 @@ int main(int value,char *agrv[])
 }
 
 
+
