ClassDiagram {


class imi_cmos_reg_info {
	"unsigned char" : "   type"
	"unsigned int" : "    reg"
	"unsigned int" : "    val"
}

class imi_vendor_cmd_header {
	"unsigned short" : "  flag"
	"unsigned short" : "  data_len"
	"unsigned short" : "  cmd"
	"unsigned short" : "  cmd_cnt"
    "//  0 "(imi_vendor_cmd_rsp_header)
}

class imi_vendor_cmd_rsp_header {
	"struct imi_vendor_cmd_header" : "rsp  /*0*/"
	"unsigned short" : "  ret"
}

class imi_vendor_device_ver {
	"unsigned char" : "   fw_major"
	"unsigned char" : "   fw_minor"
	"unsigned short" : "  fw_ver"
	"unsigned char" : "   ap_major"
	"unsigned char" : "   ap_minor"
	"unsigned short" : "  ap_ver"
	"unsigned char" : "   hardware"
	"unsigned char" : "   chip"
	"unsigned char" : "   ap_hardware"
}

class imi_sub_system_version {
	"unsigned char" : "   dpu_sw_major"
	"unsigned char" : "   dpu_sw_minor"
	"unsigned char" : "   vpu_sw_major"
	"unsigned char" : "   vpu_sw_minor"
	"unsigned char" : "   isp_sw_major"
	"unsigned char" : "   isp_sw_minor"
	"unsigned char" : "   dsp0_sw_major"
	"unsigned char" : "   dsp0_sw_minor"
	"unsigned char" : "   dsp1_sw_major"
	"unsigned char" : "   dsp1_sw_minor"
	"unsigned char" : "   dsp_load_mode"
}

class imi_sensor_reg_info {
	"unsigned int" : "    addr"
	"unsigned int" : "    value"
}

class imi_sensor_param_info {
	"unsigned short" : "  type"
	"union {unsigned char" : "    data[50]"
	"unsigned char" : "   *data_ptr"
    "//  0 "(imi_vendor_sensor_cmd)
}

class imi_frame_format_info {
	"enum sensor_pixel_format" : "pixel"
	"unsigned short" : "  width"
	"unsigned short" : "  high"
	"unsigned char" : "   bits_per_pixel"
	"unsigned char" : "   fps"
    "//  1 "(imi_vendor_sensor_cmd)
    "//  0 "(imi_stream_ctl_cmd)
}

class user_track_mode {
	"enum user_track_alg_mode" : "alg_type"
	"enum pose_state" : " state"
	"unsigned int" : "    width"
	"unsigned int" : "    heigh"
	"unsigned int" : "    fps"
    "//  1 "(imi_stream_ctl_cmd)
}

class imi_one_frame {
	"enum imi_stream_type" : "    type"
	"unsigned int" : "    addr"
	"unsigned int" : "    size"
}

class face_detect_mode {
	"enum face_alg_mode" : "      alg_type"
	"enum face_select_mode" : "   select_mdoe"
    "//  2 "(imi_stream_ctl_cmd)
}

class imi_vendor_sensor_cmd {
	"enum vendor_cmd" : " cmd_type"
	"union {struct imi_sensor_reg_info" : " sensor_reg"
	"struct imi_sensor_param_info" : " sensor_param  /*0*/"
	"struct imi_frame_format_info" : "fmt  /*1*/"
}

class imi_stream_ctl_cmd {
	"unsigned short" : "  stream_type"
	"union {int" : "      mode"
	"struct imi_frame_format_info" : "fmt  /*0*/"
	"struct user_track_mode" : "  user_track  /*1*/"
	"struct face_detect_mode" : " face_detect  /*2*/"
    "//  0 "(stream_ctl_info)
}

class imi_vendor_cmd {
	"enum usb_cmd_stage" : "      cmd_stage"
	"struct usb_ctrlrequest" : "  *usbReq"
}

class imi_vendor_cmd_handle {
	"int" : "     cmd_type"
	"int (*callback)"(uvc_request_data:"*req")
}

class imi_vendor_param {
	"int" : "     isp_fmt_to_dsp"
}

class vendor_file_info {
	"unsigned short" : "  type"
	"unsigned short" : "  attr"
	"unsigned int" : "    len"
	"unsigned short" : "  crc"
	"unsigned int" : "    offset"
	"unsigned char" : "   *data"
	"char" : "      *path"
	"unsigned char" : "   init"
}

class sub_sys_param {
	"struct imi_device_handle" : "*binder_handle"
}

class sub_sys_callback {
	"int (*send_response)"(char:"*buf" , int:"len")
}

class sub_system_device {
	"char" : "    *name"
	"FRTOS_mutex" : "     mutex"
	"int (*init)"(sub_sys_param:"*param")
	"void (*deinit)"(voi:"void")
	"int (*stream_ctl)"(imi_stream_ctl_cmd:"*cmd")
	"int (*process_events)"(int:"stream_id" , imi_vendor_sensor_cmd:"*cmd")
	"int (*handshake)"(void:"*pdata")
	"int (*parameter_init)"(int:"id" , void:"*pdata")
	"int (*send_response)"(char:"*buf" , int:"len")
	"int (*handle_payment)"(char:"*packet" , int:"packet_len")
    "//  0 "(sub_system)
}

class sub_system {
	"struct sub_system_device" : " *dev[VENDOR_SUB_SYSTEM_MAX]  /*0*/"
	"struct imi_device_handle" : "*dev_handle"
}

class usb_stream_info {
	"int" : "     stream_id"
	"int" : "     max_buf"
	"enum sensor_stream_type" : " buf_id"
	"enum imi_buf_type" : "       buf_type"
    "//  0 "(imi_usb_stream)
}

class imi_usb_buf {
	"struct list_head" : "list"
	"struct imi_video_buf_info" : "info"
    "//  1 "(imi_usb_stream)
}

class imi_usb_tsk {
	"TaskHandle_t" : "    tsk_handle"
	"int" : "     exit"
    "//  0 "(vendor_usb)
    "//  1 "(vendor_usb)
    "//  2 "(vendor_usb)
}

class imi_usb_stream {
	"struct usb_stream_info" : "  *info  /*0*/"
	"struct imi_usb_buf" : " buf[VENDOR_USB_MAX_BUF_NUM]  /*1*/"
	"int" : "     imi_open_cnt"
	"int" : "     used_buf"
	"FRTOS_mutex" : "     mutex"
	"struct list_head" : "idle"
    "//  3 "(vendor_usb)
}

class vendor_usb {
	"struct imi_device_handle" : "*usb_handle"
	"int" : "     imi_open_cnt"
	"FRTOS_mutex" : "     mutex"
	"struct list_head" : "buf"
	"struct imi_usb_tsk" : "      dequeue_thread  /*0*/"
	"struct imi_usb_tsk" : "      get_buf_thread  /*1*/"
	"struct imi_usb_tsk" : "      queue_thread  /*2*/"
	"QueueHandle_t" : "   buf_queue"
	"struct imi_usb_stream" : " usb_stream[VENDOR_USB_STREAM_NUM]  /*3*/"
}

class sub_system_device imi_sub_system_usb = {
    "//  0 "(sub_system)
}

class cmd_hal {
	".name = "usb",.init = vendor_usb_init,.deinit = vendor_usb_deinit,.stream_ctl = vendor_usb_stream_ctl,.process_events = vendor_usb_process_events,.handshake = vendor_usb_handshake,.parameter_init = vendor_usb_para_init,struct imi_device_handle" : " *cmd_handle"
	"TaskHandle_t" : "    cmd_thd"
	"int" : "     exit_read"
	"struct uvc_request_data" : " buf"
	"struct usb_ctrlrequest" : "  ctrl"
	"enum vendor_cmd_stage" : "   stage"
	"struct uvc_request_data" : " *cmd_ret"
	"int (*data_handle)"(uvc_request_data:"*resp")
}

class stream_ctl_info {
	"struct imi_stream_ctl_cmd" : " cmd[MAX_STREAM_CTL_ITEM]  /*0*/"
	"int" : "     w_index"
	"int" : "     r_index"
    "//  0 "(stream_ctl_tsk)
}

class stream_ctl_tsk {
	"int" : "     exit_tsk"
	"TaskHandle_t" : "    cmd_thd"
	"struct stream_ctl_info" : "  ctl  /*0*/"
}

class vendor_device_tab {
	"unsigned int" : "    param"
	"unsigned int" : "    id_sensor"
}

class imi_vendor_param param = {0};
	"int" : "     ret"
	"FRTOS_mutex_create(&mutex" : " FRTOS_mutex_create(&mutex)"
	"ret =" : "   vendor_misc_init()"
	"if (ret) {log_e("vendor_misc_init" : " fail\n")"
	"return" : "  -EFAULT"
	"}ret =" : "  sub_system_init(&param)"
	"if (ret) {log_e("sub_system_init init" : " fail\n")"
	"goto" : "    fail1"
	"}vendor_device_tsk_init(" : " }vendor_device_tsk_init()"
	"ret = imi_cmd_hal_init(&vendor_resp," : " vendor_device_handle_data)"
	"if (ret) {log_e("imi_cmd_hal_init" : " fail\n")"
	"}return" : " 0"
	"fail1:vendor_misc_deinit(" : " fail1:vendor_misc_deinit()"
	"return" : "  -EFAULT"
	"}void imi_vendor_device_deinit(void){struct stream_ctl_tsk *p_tsk =" : " &imi_stream_tsk"
	"imi_cmd_hal_deinit(" : "     imi_cmd_hal_deinit()"
	"p_tsk->exit_tsk =" : "       1"
	"sub_system_deinit(" : "      sub_system_deinit()"
	"vendor_misc_deinit(" : "     vendor_misc_deinit()"
	"FRTOS_mutex_free(&mutex" : " FRTOS_mutex_free(&mutex)"
	"}#include <soc/imi_video.h>#include <usb/linux/gadget.h>#include <errno.h>#include <linux_compat.h>#include <imi_dev.h>#include "../include/vendor_device.h"#include "../include/vendor_cmd.h"#include "../include/vendor_misc.h"#include "../include/vendor_sub_system.h"#include "elog.h"struct fw_ver {unsigned char" : " major"
	"unsigned char" : "   minor"
	"unsigned short" : "  ver"
}

class hw_ver {
	"unsigned char" : "   hw"
	"unsigned char" : "   chip"
	"unsigned char" : "   ap_hw"
    "//  0 "(protocol_ver)
}

class protocol_ver {
	"struct fw_ver" : "   fw"
	"struct hw_ver" : "   hw  /*0*/"
    "//  0 "(device_param)
}

class sensor_info {
	"unsigned char" : "   ep_num"
	"unsigned char" : "   sensor_type"
    "//  1 "(device_param)
}

class device_param {
	"unsigned char" : "   serial[32]"
	"unsigned char" : "   usb_speed"
	"struct protocol_ver" : "     versions  /*0*/"
	"struct sensor_info" : "      sensor_list[16]  /*1*/"
	"unsigned char" : "   unused[184]"
}

class vendor_misc_handle {
	"unsigned int" : "    cmd_type"
	"int (*callback)"(void:"*cmd")
}

class vendor_misc_handle vendor_misc_handle_map[] = {
}




imi_vendor_cmd_header -c-> imi_vendor_cmd_rsp_header
imi_sensor_param_info -c-> imi_vendor_sensor_cmd
imi_frame_format_info -c-> imi_vendor_sensor_cmd
imi_frame_format_info -c-> imi_stream_ctl_cmd
user_track_mode -c-> imi_stream_ctl_cmd
face_detect_mode -c-> imi_stream_ctl_cmd
imi_stream_ctl_cmd -c-> stream_ctl_info
imi_usb_buf -c-> imi_usb_stream
imi_usb_tsk -c-> vendor_usb
imi_usb_stream -c-> vendor_usb
stream_ctl_info -c-> stream_ctl_tsk
hw_ver -c-> protocol_ver
protocol_ver -c-> device_param
sensor_info -c-> device_param
sub_system_device -a-> sub_system
usb_stream_info -a-> imi_usb_stream
sub_system_device -a-> sub_system



}